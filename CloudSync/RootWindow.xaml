<Window x:Class="CloudSync.RootWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CloudSync"
		xmlns:tb="http://www.hardcodet.net/taskbar"
		xmlns:convert="clr-namespace:CloudSync.Converters"
        mc:Ignorable="d"
		x:Name="_this"
        Title="Synchronizer" Height="600" Width="800" WindowStyle="None" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" BorderThickness="4,4,4,4" BorderBrush="#FF323232" Background="#FF282828" StateChanged="OnWindowStateChanged"  >
	<Window.Resources>
		<ResourceDictionary>
			<convert:WorkerToBackgroundConverter x:Key="WorkerConverter"/>
			<convert:PercentCompletedToEnableConverter x:Key="PerecentConverter"/>
			<Style TargetType="{x:Type ListBoxItem}" x:Key="AccountButton" >
				<Setter Property="Height" Value="60"/>
				<Setter Property="HorizontalContentAlignment" Value="Center"/>
				<Setter Property="BorderThickness" Value="2"/>
				<Setter Property="Background" Value="#FF303030"/>
				<Setter Property="Margin" Value="1,0,0,0"/>
				<Setter Property="FontSize" Value="17"/>
				<Setter Property="FontWeight" Value="Bold"/>
				<Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}, Path=BorderBrush}"/>
			</Style>
			<Style TargetType="{x:Type ContextMenu}">
				<Setter Property="SnapsToDevicePixels"          Value="True" />
				<Setter Property="OverridesDefaultStyle"          Value="True" />
				<Setter Property="Grid.IsSharedSizeScope"          Value="true" />
				<Setter Property="HasDropShadow"          Value="True" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ContextMenu}">
							<Border x:Name="Border" Background="#FF303030" BorderBrush="#FF383838"  BorderThickness="2">
								<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="HasDropShadow" Value="true">
									<Setter TargetName="Border" Property="Padding" Value="0"/>									
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</Window.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="*"/>
			</Grid.RowDefinitions>
			<Label Name="Caption" MouseDown="Caption_MouseDown"  Background="#FF383838" BorderThickness="0,0,0,4" BorderBrush="#FF323232"  Grid.Column="0" Grid.ColumnSpan="2"  HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Foreground="#FF888888" Padding="-5" FontSize="20" FontWeight="Heavy"  Content="Synchronizer"/>
			<StackPanel Orientation="Horizontal" Grid.Column="1">
				<Button Width="34" Height="34" BorderBrush="#FF323232"  BorderThickness="4,0,0,4"  Background="#FF383838" Click="OnMinimizeButtonClick">
					<Button.Style>
						<Style TargetType="{x:Type Button}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
											<Border x:Name="Border" Background="{TemplateBinding Background}">
												<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
											</Border>
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter Property="Background" Value="DarkGreen" TargetName="Border" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Button.Style>
				</Button>
				<Button Width="34" Height="34" BorderBrush="#FF323232" BorderThickness="4,0,0,4" Background="#FF383838" Click="OnCloseButtonClick">
					<Button.Style>
						<Style TargetType="{x:Type Button}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
											<Border x:Name="Border" Background="{TemplateBinding Background}">
												<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
											</Border>
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter Property="Background" Value="DarkRed" TargetName="Border" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Button.Style>
				</Button>
			</StackPanel>
			<Border Grid.Row="1" Grid.ColumnSpan="2" Background="Transparent" BorderBrush="#FF323232" BorderThickness="0,0,0,4">
				<DockPanel LastChildFill="True">
					<Button Name="ConnectButton" Width="60" Height="60"  VerticalAlignment="Stretch"  BorderThickness="2" HorizontalAlignment="Left"  Background="#FF303030"  Content="Add" FontSize="18" FontWeight="Heavy"  Foreground="#FF888888" Click="OnConnectButtonClick">
						<Button.Style>
							<Style TargetType="{x:Type Button}">
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="{x:Type Button}">
											<Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
												<Border x:Name="Main" Background="{TemplateBinding Background}">
													<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
												</Border>
											</Border>
											<ControlTemplate.Triggers>
												<Trigger Property="IsMouseOver" Value="True">
													<Setter Property="Background" Value="#FF454545" TargetName="Main" />
												</Trigger>
												<Trigger Property="IsPressed" Value="True">
													<Setter Property="BorderBrush" Value="#FF888888" TargetName="Border" />
												</Trigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Button.Style>
					</Button>
					<ListBox DisplayMemberPath="Client.UserData.DisplayName" HorizontalContentAlignment="Stretch" ItemContainerStyle="{StaticResource ResourceKey=AccountButton}" Padding="0" Background="Transparent"  BorderBrush="{Binding ElementName=ConnectButton, Path=BorderBrush}"  ScrollViewer.HorizontalScrollBarVisibility="Disabled" Name="ConnectedAccounts" SelectionChanged="OnSelectedAccountChanged"  Foreground="#FF888888" BorderThickness="0"   ItemsSource="{Binding ElementName=_this, Path=Clients}" MouseLeftButtonUp="ConnectedAccounts_MouseLeftButtonUp" >
						<ListBox.ContextMenu>
							<ContextMenu Closed="OnAccountContextMenuClosed"  x:Name="accountContextMenu">
								<MenuItem Header="Reset delta link" Click="OnResetDeltaLinkClick"/>
								<MenuItem Header="Folders for sync" Click="OnFolderForSyncClick"/>
							</ContextMenu>
						</ListBox.ContextMenu>
						<ListBox.ItemsPanel>
							<ItemsPanelTemplate>
								<UniformGrid Rows="1" IsItemsHost="True"/>
							</ItemsPanelTemplate>
						</ListBox.ItemsPanel>
					</ListBox>
				</DockPanel>
			</Border>
		</Grid>

		<Grid Grid.Row="1" Grid.ColumnSpan="2" >
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="60"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<StackPanel Orientation="Vertical">
			<Button Name="RecieveFromUSBButton" Width="59" Height="59"  VerticalAlignment="Top"  BorderThickness="2" HorizontalAlignment="Left" Click="OnRecieveFromUSBButton"  Background="#FF303030"  Content="USB" FontSize="18" FontWeight="Heavy"  Foreground="#FF888888">
				<Button.Style>
					<Style TargetType="{x:Type Button}">
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type Button}">
									<Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
										<Border x:Name="Main" Background="{TemplateBinding Background}">
											<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
										</Border>
									</Border>
									<ControlTemplate.Triggers>
										<Trigger Property="IsMouseOver" Value="True">
											<Setter Property="Background" Value="#FF454545" TargetName="Main" />
										</Trigger>
										<Trigger Property="IsPressed" Value="True">
											<Setter Property="BorderBrush" Value="#FF888888" TargetName="Border" />
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</Button.Style>
			</Button>
			<Button Name="StartupButton" Width="59" Height="59"  VerticalAlignment="Top"  BorderThickness="2" HorizontalAlignment="Left" Click="OnAutoStartButtonClick"  Background="#FF303030"  Content="Start" FontSize="18" FontWeight="Heavy"  Foreground="#FF888888">
				<Button.Style>
					<Style TargetType="{x:Type Button}">
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type Button}">
									<Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
										<Border x:Name="Main" Background="{TemplateBinding Background}">
											<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
										</Border>
									</Border>
									<ControlTemplate.Triggers>
										<Trigger Property="IsMouseOver" Value="True">
											<Setter Property="Background" Value="#FF454545" TargetName="Main" />
										</Trigger>
										<Trigger Property="IsPressed" Value="True">
											<Setter Property="BorderBrush" Value="#FF888888" TargetName="Border" />
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</Button.Style>
			</Button>
			</StackPanel>
			<ItemsControl Grid.Column="1" x:Name="OneDriveWorkersBoard" ItemsSource="{Binding Source={x:Static local:Settings.Instance}, Path=Accounts}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<UniformGrid VerticalAlignment="Top"  Rows="1" IsItemsHost="True"/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<Border BorderBrush="#FF323232" BorderThickness="4,0,0,0" Margin="-1,0,0,0">
							<ListBox Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Disabled"  BorderThickness="0" HorizontalContentAlignment="Stretch"  x:Name="workers"  Height="{Binding ElementName=OneDriveWorkersBoard, Path=ActualHeight}" ItemsSource="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.CurrentWorkers}">
								<ListBox.ItemContainerStyle>
									<Style TargetType="ListBoxItem">
										<Setter Property="BorderThickness" Value="0"/>
										<Setter Property="Padding" Value="10,0,10,7"/>
										<Style.Triggers>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter Property="BorderThickness" Value="0"/>
											</Trigger>
											<Trigger Property="IsSelected" Value="True">
												<Setter Property="BorderThickness" Value="0"/>
											</Trigger>
										</Style.Triggers>
									</Style>
								</ListBox.ItemContainerStyle>
								<ListBox.ItemTemplate>
									<DataTemplate>
										<Border BorderBrush="#FF666666" Padding="4,6,4,2"  BorderThickness="0,0,0,1">
											<Grid ToolTipService.ToolTip="{Binding AdditionalInfo}">
												<Grid.ContextMenu>
													<ContextMenu>
														<MenuItem Header="Try again" Click="OnTryAgainPressed"  IsEnabled="{Binding Path=CompletedPercent, Converter={StaticResource PerecentConverter}}"  />
														<MenuItem Header="Revoke" Click="OnRemoveWorkerClick"  IsEnabled="{Binding Path=CompletedPercent, Converter={StaticResource PerecentConverter}}"  />
													</ContextMenu>
												</Grid.ContextMenu>
												<ProgressBar Height="1" Margin="-5,0,-5,-3" VerticalAlignment="Bottom"  BorderThickness="0" Minimum="0" Maximum="100" Value="{Binding CompletedPercent}" Background="{Binding CompletedPercent, Converter={StaticResource WorkerConverter}}"/>
												<StackPanel Orientation="Vertical" >
													<TextBlock Margin="0,0,-5,0" VerticalAlignment="Bottom"  Foreground="#FF666666" FontSize="12" x:Name="message"  Text="{Binding Status}" />
													<Label  Foreground="#FF888888" FontSize="15" FontWeight="Medium"  Content="{Binding TaskName}" />
												</StackPanel>
											</Grid>
										</Border>
									</DataTemplate>
								</ListBox.ItemTemplate>
							</ListBox>
						</Border>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
		</Grid>
		<Border  IsHitTestVisible="False" Name="BrowserHolder" Grid.Row="1" Visibility="Hidden" Margin="170,0,170,20"  Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="2">
			<Grid Height="{Binding ElementName=BrowserHolder,Path=Height}">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="*"/>
				</Grid.RowDefinitions>
				<TextBlock Padding="10" FontSize="16"  VerticalAlignment="Center"  Foreground="#FF888888" Background="#FF383838" x:Name="BrowserTitle"/>
				<WebBrowser x:Name="Browser" Grid.Row="1"  Navigated="OnWebBrowserNavigated"/>
			</Grid>
		</Border>
	</Grid>
</Window>
